@model PortailReserve.ViewModel.EventViewModel
@{
    ViewBag.Title = "Evenement";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section style {
    <link rel="stylesheet" href="~/Content/CSS/event.css" />
}

<div class="container">
    <div class="row">
        <div class="col-3">
            <button class="bouton boutonBleu allWidth" onclick="clickOn('retourPlanning'); ">
                @Html.ActionLink("Retour au planning", "Index", "Planning", null, new { @class = "lienBoutonBleu", id = "retourPlanning" })
            </button>
        </div>
        @if(Model.Util.Role < 4)
        {
            <div class="col-6"></div>
            <div class="col-3">
                <button id="boutonModifier" class="boutonOrange bouton" onclick="clickOn('modifierEvent'); ">
                    @Html.ActionLink("Modifier", "Modifier", "Planning", new { id = Model.Event.Id}, new { @class = "lienBoutonVert", id = "modifierEvent" })
                </button>
            </div>
        }
    </div>
</div>
@if (ViewBag.Erreur == "")
{
    <h1> @Model.Event.Nom  </h1>

    <div class="container">
        <div class="row" id="eventType">
            <div class="col-1">
                @if (Model.Event.Type.Equals("Instruction"))
                {
                    <img src="~/Content/image/point_vert.png" alt="point vert" id="pastilleType" />
                }
                else if (Model.Event.Type.Equals("Stage"))
                {
                    <img src="~/Content/image/point_bleu.png" alt="point bleu" id="pastilleType" />
                }
                else if (Model.Event.Type.Equals("Mission"))
                {
                    <img src="~/Content/image/point_rouge.png" alt="point rouge" id="pastilleType" />
                }
                else if (Model.Event.Type.Equals("Exercice"))
                {
                    <img src="~/Content/image/point_jaune.png" alt="point jaune" id="pastilleType" />
                }
                else
                {
                    <img src="~/Content/image/point_vert.png" alt="point vert" id="pastilleType" />
                }
            </div>
            <div class="col-5" id="textType">
                @Model.Event.Type
            </div>
            <div class="col-6">
                <button id="patracdr">
                    <a href="@Model.Event.Patracdr" id="lienPatrac" target="_blank">PATRACDR</a>
                </button>
            </div>
        </div>

        <div class="row" id="eventDate">
            <div class="col-12">
                Du <strong>@Model.Event.Debut.ToString("D", new System.Globalization.CultureInfo("fr-FR"))</strong> au <strong>@Model.Event.Fin.ToString("D", new System.Globalization.CultureInfo("fr-FR"))</strong>
            </div>
        </div>

        <div class="row" id="lieuEvent">
            <div class="col-12">
                <strong> Lieu : </strong> @Model.Event.Lieu
            </div>
        </div>

        <div class="row">
            <div class="col-10">
                <h2 class="titreLegend"> Informations </h2>
            </div>
        </div>
        <div class="row" id="desEvent">
            <div class="col-12">
                @Model.Event.Description
            </div>
        </div>

        @if (Model.Event.Type.Equals("Stage") || Model.Event.Type.Equals("Mission"))
        {
            <div class="row">
                <div class="col-10">
                    <h2 class="titreLegend"> Complément </h2>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    @if (Model.Effectif != null)
                    {
                        <strong> Effectif : </strong> <span> @Model.Effectif.Officier / @Model.Effectif.SousOfficier / @Model.Effectif.Militaire </span>
                    }
                    else
                    {
                        <strong> Effectif : </strong> <span> X / X / X </span>
                    }
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <strong> Date limite de réponse : </strong> @Model.Event.LimiteReponse.ToString("D", new System.Globalization.CultureInfo("fr-FR"))
                </div>
            </div>
        }

        @if (Model.Event.Debut > DateTime.Now)
        {
            <div id="boutonPart">
                @if (Model.Event.Type.Equals("Instruction") || Model.Event.Type.Equals("Exercice")) //Cas des intructions et exercice avec juste patticpation
                {
                    if (Model.Participation == null) // le user n'a pas encore répondu
                    {
                        <div class="row">
                            <div class="col-6">
                                @using (Html.BeginForm("Ajouter", "Participation", FormMethod.Post))
                                {
                                    @Html.HiddenFor(m => m.Event.Id);
                                    @Html.HiddenFor(m => m.Util.Id)
                                    <input type="hidden" value="Oui" name="participation" id="participation" />

                                    <div class="row">
                                        <input type="submit" value="Participe" class="bouton boutonVert col-6 champsTextDroit" />
                                    </div>
                                }
                            </div>
                            <div class="col-6">
                                @using (Html.BeginForm("Ajouter", "Participation", FormMethod.Post))
                                {
                                    @Html.HiddenFor(m => m.Event.Id);
                                    @Html.HiddenFor(m => m.Util.Id)
                                    <input type="hidden" value="Non" name="participation" id="participation" />

                                    <div class="row">
                                        <input type="submit" value="Ne participe pas" class="bouton boutonRouge col-6" />
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    else //Le user a déjà donné une réponse, il peut tout de fois la midifier
                    {
                        if (Model.Participation.Participe)
                        {
                            <div class="row">
                                <div class="col-12 text-center">
                                    Vous avez répondu que vous participez à cet événement.
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12">
                                    @using (Html.BeginForm("Modifier", "Participation", FormMethod.Post))
                                    {
                                        @Html.HiddenFor(m => m.Event.Id)
                                        @Html.HiddenFor(m => m.Util.Id)
                                        <input type="hidden" value="Non" name="modifParticipation" id="modifParticipation" />

                                        <div class="row">
                                            <input type="submit" value="Ne plus participer" class="bouton boutonRouge col-6 champsTextCenter" />
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="row">
                                <div class="col-12 text-center">
                                    Vous avez répondu que vous ne participez pas à cet événement.
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12">
                                    @using (Html.BeginForm("Modifier", "Participation", FormMethod.Post))
                                    {
                                        @Html.HiddenFor(m => m.Event.Id)
                                        @Html.HiddenFor(m => m.Util.Id)
                                        <input type="hidden" value="Oui" name="modifParticipation" id="modifParticipation" />

                                        <div class="row">
                                            <input type="submit" value="Participer" class="bouton boutonVert col-6 champsTextCenter" />
                                        </div>
                                    }
                                </div>
                            </div>
                        }

                    }
                }
                else // cas de stage et de mission donc donner des dispos
                {
                    if (Model.AllDispo.Count < 1) // Le user n'a pas de dispos alors qu'elle était attendu
                    {
                        if (Model.Event.LimiteReponse >= DateTime.Now)
                        {
                            <div class="row">
                                <div class="col-6">
                                    <div class="row">
                                        <button class="bouton boutonVert col-6 champsTextDroit" onclick="afficherCacherElement('popupDispo'); "> Disponible </button>
                                    </div>
                                </div>
                                <div class="col-6">
                                    @using (Html.BeginForm("Ajouter", "Disponibilite", FormMethod.Post))
                                    {
                                        @Html.HiddenFor(m => m.Event.Id);
                                        @Html.HiddenFor(m => m.Event.Debut);
                                        @Html.HiddenFor(m => m.Event.Fin);
                                        @Html.HiddenFor(m => m.Util.Id);

                                        <input type="hidden" value="Non" name="disponibilite" id="disponibilite" />

                                        <div class="row">
                                            <input type="submit" value="Non disponible" class="bouton boutonRouge col-6" />
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="row">
                                <div class="col-12 text-center marginTop">
                                    <strong> La date de limite de réponse est passée. </strong>
                                </div>
                            </div>
                        }
                    }
                    else // le user a déjà donner (ou pas) une dispo
                    {
                        if (Model.ADispo) // le user a déjà une dispo
                        {
                            <div class="row">
                                <div class="col-12 text-center">
                                    Disponibilité(s) actuelle(s) :
                                </div>
                            </div>
                            foreach (PortailReserve.Models.Disponibilite d in Model.AllDispo)
                            {
                                <div class="row ligneDispo">
                                    <div class="col-8 text-center boutonLike">
                                        Du <strong>@d.Debut.ToString("D", new System.Globalization.CultureInfo("fr-FR"))</strong> au <strong>@d.Fin.ToString("D", new System.Globalization.CultureInfo("fr-FR"))</strong>
                                    </div>
                                    <div class="col-2 text-center boutonLike">
                                        @switch (d.Valide)
                                        {
                                            case 0:
                                                <span> En attente </span>
                                                break;
                                            case 1:
                                                <span style="color: forestgreen; "> Validé </span>
                                                break;
                                            case 2:
                                                <span style="color: red; "> Refusé </span>
                                                break;
                                        }
                                    </div>
                                    @if (d.Valide == 0)
                                    {
                                        <div class="col-2">
                                            @using (Html.BeginForm("Supprimer", "Disponibilite", FormMethod.Post))
                                            {
                                                @Html.HiddenFor(m => m.Event.Id);
                                                @Html.HiddenFor(m => m.Util.Id);
                                                <input type="hidden" name="toSupp" id="toSuppp" value="@d.Id" />

                                                <button class="bouton boutonRouge"> Supprimer </button>
                                            }
                                        </div>
                                    }
                                </div>
                            }

                            if (Model.Event.LimiteReponse >= DateTime.Now)
                            {
                                <div class="row">
                                    <div class="col-12">
                                        <div class="row">
                                            <button class="col-6 bouton boutonVert champsTextCenter" onclick="afficherCacherElement('popupDispo'); "> Ajouter une disponibilité</button>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="row">
                                    <div class="col-12 text-center marginTop">
                                        <strong> La date limite de réponse est passée.</strong>
                                    </div>
                                </div>
                            }
                        }
                        else // le user n'a pas de dispo
                        {
                            <div class="row">
                                <div class="col-12 text-center">
                                    Vous avez indiqué que vous n'êtes pas disponible.
                                </div>
                            </div>

                            if (Model.Event.LimiteReponse >= DateTime.Now)
                            {
                                <div class="row">
                                    <div class="col-12">
                                        <div class="row">
                                            <button class="col-6 bouton boutonVert champsTextCenter" onclick="afficherCacherElement('popupDispoModif'); "> Se rendre disponible </button>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="row">
                                    <div class="col-12 text-center marginTop">
                                        <strong> La date limite de réponse est passée. </strong>
                                    </div>
                                </div>
                            }
                        }
                    }
                }
            </div>
        }
        else
        {
            <div class="row">
                <div class="col-12 text-center marginTop">
                    <strong> Cet événement a déjà commencé ou est déjà passé. </strong>
                </div>
            </div>
        }
    </div>

    <!--
    ################################################################################
    ###########################  Afficahge des participants  #######################
    ################################################################################
    -->
    if(Model.Util.Role < 4)
    {
        <h1 class="titrePresence"> Liste des participants </h1>

        if (Model.Event.Type.Equals("Exercice") || Model.Event.Type.Equals("Instruction"))
        {
            <div class="container">
                <div class="partPresence">
                    <div class="row">
                        <div class="col-10">
                            <h2 class="titreLegend"> Participe <span class="@(Model.UtilParticipation.Count<10?"pastilleNum":"pastilleNumDouble")">@Model.UtilParticipation.Count</span> </h2>
                        </div>
                        <div class="col-2">
                            <img src="~/Content/image/chevron_bas.png" class="imgChevron" id="chevronParti" onclick="afficherCacherPartPres('chevronParti', 'partParti'); " />
                        </div>
                    </div>
                    <div id="partParti" style="display: none;">
                        <div class="row">
                            <div class="col-4">
                                <strong> Grade NOM </strong>
                            </div>
                            <div class="col-4">
                                <strong> Date de réponse </strong>
                            </div>
                            <div class="col-4">
                                <strong> Dernière modification </strong>
                            </div>
                        </div>
                        @if (Model.UtilParticipation.Count == 0)
                        {
                            <div class="row">
                                <div class="col-12 text-center">
                                    Aucune personne à afficher.
                                </div>
                            </div>
                        }
                        else
                        {
                            foreach (PortailReserve.Models.UtilisateurParticipation u in Model.UtilParticipation)
                            {
                                <div class="row">
                                    <div class="col-4">
                                        @u.Util.Grade @u.Util.Nom.ToUpperInvariant()
                                    </div>
                                    <div class="col-4">
                                        @u.Participation.Reponse.ToString()
                                    </div>
                                    <div class="col-4">
                                        @u.Participation.Modification.ToString()
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>

                <div class="partPresence">
                    <div class="row">
                        <div class="col-10">
                            <h2 class="titreLegend"> Ne participe pas <span class="@(Model.UtilNonParticipation.Count<10?"pastilleNum":"pastilleNumDouble")">@Model.UtilNonParticipation.Count</span> </h2>
                        </div>
                        <div class="col-2">
                            <img src="~/Content/image/chevron_bas.png" class="imgChevron" id="chevronNonParti" onclick="afficherCacherPartPres('chevronNonParti', 'partNonParti'); " />
                        </div>
                    </div>
                    <div id="partNonParti" style="display: none;">
                        <div class="row">
                            <div class="col-4">
                                <strong> Grade NOM </strong>
                            </div>
                            <div class="col-4">
                                <strong> Date de réponse </strong>
                            </div>
                            <div class="col-4">
                                <strong> Dernière modification </strong>
                            </div>
                        </div>
                        @if (Model.UtilNonParticipation.Count == 0)
                        {
                            <div class="row">
                                <div class="col-12 text-center">
                                    Aucune personne à afficher.
                                </div>
                            </div>
                        }
                        else
                        {
                            foreach (PortailReserve.Models.UtilisateurParticipation u in Model.UtilNonParticipation)
                            {
                                <div class="row">
                                    <div class="col-4">
                                        @u.Util.Grade @u.Util.Nom.ToUpperInvariant()
                                    </div>
                                    <div class="col-4">
                                        @u.Participation.Reponse.ToString()
                                    </div>
                                    <div class="col-4">
                                        @u.Participation.Modification.ToString()
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>

                <div class="partPresence">
                    <div class="row">
                        <div class="col-10">
                            <h2 class="titreLegend"> Sans réponse <span class="@(Model.NoReponseP.Count<10?"pastilleNum":"pastilleNumDouble")">@Model.NoReponseP.Count</span> </h2>
                        </div>
                        <div class="col-2">
                            <img src="~/Content/image/chevron_bas.png" class="imgChevron" id="chevronNoRepParti" onclick="afficherCacherPartPres('chevronNoRepParti', 'partNoRepParti'); " />
                        </div>
                    </div>
                    <div id="partNoRepParti" style="display: none;">
                        <div class="row">
                            <div class="col-12">
                                <strong> Grade NOM </strong>
                            </div>
                        </div>
                        @if (Model.NoReponseP.Count == 0)
                        {
                            <div class="row">
                                <div class="col-12 text-center">
                                    Aucune personne à afficher.
                                </div>
                            </div>
                        }
                        else
                        {
                            foreach (PortailReserve.Models.Utilisateur u in Model.NoReponseP)
                            {
                                <div class="row">
                                    <div class="col-12">
                                        @u.Grade @u.Nom.ToUpperInvariant()
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="container">
                <div class="partPresence">
                    <div class="row">
                        <div class="col-10">
                            <h2 class="titreLegend"> Disponible <span class="@(Model.UtilDispo.Count<10?"pastilleNum":"pastilleNumDouble")">@Model.UtilDispo.Count</span> </h2>
                        </div>
                        <div class="col-2">
                            <img src="~/Content/image/chevron_bas.png" id="chevronDispo" class="imgChevron" onclick="afficherCacherPartPres('chevronDispo', 'partDispo'); " />
                        </div>
                    </div>
                    <div id="partDispo" style="display: none;">
                        @if (Model.UtilDispo.Count == 0)
                        {
                            <div class="row">
                                <div class="col-12 text-center">
                                    Aucune personne à affciher.
                                </div>
                            </div>
                        }
                        else
                        {
                            foreach (PortailReserve.Models.UtilisateurDispo u in Model.UtilDispo)
                            {
                                <div class="row">
                                    <div class="col-12">
                                        <strong> @u.Util.Grade @u.Util.Nom.ToUpperInvariant() </strong>
                                    </div>
                                </div>
                                <div class="partDispo">
                                    @foreach (PortailReserve.Models.Disponibilite d in u.Dispos)
                                    {
                                        <div class="row marginTop">
                                            <div class="col-6 boutonLike text-center">
                                                Du @d.Debut.ToString("dd/MM/yyyy") au @d.Fin.ToString("dd/MM/yyyy")
                                            </div>
                                            <div class="col-3">
                                               @if (d.Valide == 1)
                                               {
                                                   <div class="col-10 text-center" style="color: forestgreen; "> Validé </div>
                                               }
                                               else
                                               {
                                                   @Html.ActionLink("Valider", "Valider", "Disponibilite", new { id = d.Id, ev = Model.Event.Id }, new { style = "display: none; ", id = "valid_" + d.Id })
                                                   <button class="bouton boutonVert col-10 champsTextCenter" onclick="clickOnValid('@d.Id'); "> Valider </button>
                                               }
                                            </div>
                                            <div class="col-3">
                                                @if (d.Valide == 2)
                                                {
                                                    <div class=" col-10 text-center" style="color: red; "> Refusé </div>
                                                }
                                                else
                                                {
                                                    @Html.ActionLink("Refuser", "Refuser", "Disponibilite", new { id = d.Id, ev = Model.Event.Id }, new { style = "display: none; ", id = "refus_" + d.Id })
                                                    <button class="bouton boutonRouge col-10 champsTextCenter" onclick="clickOnRefus('@d.Id'); "> Refuser </button>
                                                }
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                        }
                    </div>
                </div>

                <div class="partPresence">
                    <div class="row">
                        <div class="col-10">
                            <h2 class="titreLegend"> Non disponible <span class="@(Model.UtilNonDispo.Count<10?"pastilleNum":"pastilleNumDouble")">@Model.UtilNonDispo.Count</span> </h2>
                        </div>
                        <div class="col-2">
                            <img src="~/Content/image/chevron_bas.png" id="chevronNonDispo" class="imgChevron" onclick="afficherCacherPartPres('chevronNonDispo', 'partNoDispo'); " />
                        </div>
                    </div>
                    <div id="partNoDispo" style="display: none;">
                        @if (Model.UtilNonDispo.Count == 0)
                        {
                            <div class="row">
                                <div class="col-12 text-center">
                                    Aucune personne à afficher.
                                </div>
                            </div>
                        }
                        else
                        {
                            foreach (PortailReserve.Models.UtilisateurDispo u in Model.UtilNonDispo)
                            {
                                <div class="row">
                                    <div class="col-12">
                                        @u.Util.Grade @u.Util.Nom.ToUpperInvariant()
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>

                <div class="partPresence">
                    <div class="row">
                        <div class="col-10">
                            <h2 class="titreLegend"> Sans réponse <span class="@(Model.NoReponseD.Count<10?"pastilleNum":"pastilleNumDouble")">@Model.NoReponseD.Count</span> </h2>
                        </div>
                        <div class="col-2">
                            <img src="~/Content/image/chevron_bas.png" id="chevronNoRep" class="imgChevron" onclick="afficherCacherPartPres('chevronNoRep', 'partNoRep'); " />
                        </div>
                    </div>
                    <div id="partNoRep" style="display: none;">
                        @if (Model.NoReponseD.Count == 0)
                        {
                            <div class="row">
                                <div class="col-12 text-center">
                                    Aucune personne à afficher.
                                </div>
                            </div>
                        }
                        else
                        {
                            foreach (PortailReserve.Models.Utilisateur u in Model.NoReponseD)
                            {
                                <div class="row">
                                    <div class="col-12">
                                        @u.Grade @u.Nom.ToUpperInvariant()
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    }
}
else
{
    <h1> @ViewBag.Erreur </h1>

}

<!--
################################################################################
#############################  Pop-Up Ajout de dispo  ##########################
################################################################################
-->
<div class="container" id="popupDispo" style="display: none;">
    <div class="row">
        <div class="col-12 text-center titrePopUp"> Je suis disponible : </div>
    </div>
    @using (Html.BeginForm("Ajouter", "Disponibilite", FormMethod.Post))
    {
        @Html.HiddenFor(m => m.Event.Id);
        @Html.HiddenFor(m => m.Event.Debut);
        @Html.HiddenFor(m => m.Event.Fin);
        @Html.HiddenFor(m => m.Util.Id);

        <input type="hidden" value="Oui" name="disponibilite" id="disponibilite" />

        <div class="row toutePeriode">
            <div class="col-6 text-right">
                @Html.CheckBoxFor(m => m.Dispo.TouteLaPeriode, new { @class = "checkBox" })
            </div>
            @Html.LabelFor(m => m.Dispo.TouteLaPeriode, "Toute la période", new { @class = "col-6 labelCheckBox" })
        </div>

        <div id="partieDate" style="display: block; ">
            <div class="row">
                <div class="col-6 text-right">
                    Du @Html.TextBoxFor(m => m.Dispo.Debut, new { type = "date", @class = "champsText", min = Model.Event.Debut.ToString("yyyy-MM-dd"), max = Model.Event.Fin.ToString("yyyy-MM--dd") })
                </div>
                <div class="col-6">
                    Au @Html.TextBoxFor(m => m.Dispo.Fin, new { type = "date", @class = "champsText", min = Model.Event.Debut.ToString("yyyy-MM-dd"), max = Model.Event.Fin.ToString("yyyy-MM--dd")  })
                </div>
            </div>
            <div class="row">
                <div class="col-12 text-center">
                    <span id="erreurDateDispo" class="erreur"></span>
                </div>
            </div>
        </div>

        <input type="submit" value="Valier" id="popUpSubmit" style="display: none;" />
    }
    <div class="row">
        <div class="col-6">
            <div class="row">
                <button class="col-4 bouton boutonVert champsTextDroit" onclick="checkDateAjout(); "> Ajouter </button>
            </div>
        </div>
        <div class="col-6">
            <div class="row">
                <button class="col-4 bouton boutonRouge" onclick="afficherCacherElement('popupDispo'); "> Annuler </button>
            </div>
        </div>
    </div>
</div>


<!--
################################################################################
#############################  Pop-Up modif de dispo  ##########################
################################################################################
-->
<div class="container" id="popupDispoModif" style="display: none;">
    <div class="row">
        <div class="col-12 text-center titrePopUp"> Je suis disponible : </div>
    </div>
    @using (Html.BeginForm("Modifier", "Disponibilite", FormMethod.Post))
    {
        @Html.HiddenFor(m => m.Event.Id);
        @Html.HiddenFor(m => m.Event.Debut);
        @Html.HiddenFor(m => m.Event.Fin);
        @Html.HiddenFor(m => m.Util.Id);
        @Html.HiddenFor(m => m.Dispo.Id)

        <div class="row toutePeriode">
            <div class="col-6 text-right">
                @Html.CheckBoxFor(m => m.Dispo.TouteLaPeriode, new { id = "touteLaPeriodeModif", @class = "checkBox" })
            </div>
            @Html.LabelFor(m => m.Dispo.TouteLaPeriode, "Toute la période", new { @class = "col-6 labelCheckBox" })
        </div>

        <div id="partieDateModif" style="display: block; ">
            <div class="row">
                <div class="col-6 text-right">
                    Du @Html.TextBoxFor(m => m.Dispo.Debut, new { id = "debutModif", type = "date", @class = "champsText", min = Model.Event.Debut.ToString("yyyy-MM-dd"), max = Model.Event.Fin.ToString("yyyy-MM--dd") })
                </div>
                <div class="col-6">
                    Au @Html.TextBoxFor(m => m.Dispo.Fin, new { id = "finModif", type = "date", @class = "champsText", min = Model.Event.Debut.ToString("yyyy-MM-dd"), max = Model.Event.Fin.ToString("yyyy-MM--dd") })
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <span id="erreurDateDispoModif" class="erreur"></span>
                </div>
            </div>
        </div>

        <input type="submit" value="Valier" id="popUpSubmitModif" style="display: none;" />
    }
    <div class="row">
        <div class="col-6">
            <div class="row">
                <button class="col-4 bouton boutonVert champsTextDroit" onclick="checkDateModif(); "> Ajouter </button>
            </div>
        </div>
        <div class="col-6">
            <div class="row">
                <button class="col-4 bouton boutonRouge" onclick="afficherCacherElement('popupDispoModif'); "> Annuler </button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/Content/JavaScript/event.js"></script>
}
